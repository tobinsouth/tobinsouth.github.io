name: Deploy to Cloudflare Pages

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: false
        default: 'production'
        type: choice
        options:
          - production
          - preview

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    permissions:
      contents: read
      deployments: write
      pull-requests: write

    env:
      NODE_VERSION: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Cache dependencies
        uses: actions/cache@v4
        id: cache-deps
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.NODE_VERSION }}-
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: |
          echo "üì¶ Installing dependencies..."
          npm ci --prefer-offline --no-audit
        env:
          CI: true

      - name: Build site
        run: |
          echo "üî® Building site..."
          npm run build
          echo "‚úÖ Build complete!"
        env:
          NODE_ENV: production

      - name: Verify build output
        run: |
          echo "üîç Verifying build output..."
          if [ ! -d "_site" ]; then
            echo "‚ùå Error: _site directory not found!"
            exit 1
          fi
          
          # Check for essential files
          for file in index.html robots.txt; do
            if [ ! -f "_site/$file" ]; then
              echo "‚ùå Error: _site/$file not found!"
              exit 1
            fi
          done
          
          # Check for blog directory
          if [ ! -d "_site/blog" ]; then
            echo "‚ö†Ô∏è Warning: _site/blog directory not found!"
          fi
          
          echo "üìä Build output statistics:"
          echo "Total files: $(find _site -type f | wc -l)"
          echo "HTML files: $(find _site -name "*.html" | wc -l)"
          echo "Total size: $(du -sh _site | cut -f1)"
          
          echo "‚úÖ Build verification complete!"

      - name: Deploy to Cloudflare Pages (Production)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: cloudflare/pages-action@v1
        id: cloudflare-deploy-prod
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ secrets.CF_PAGES_PROJECT }}
          directory: _site
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          wranglerVersion: '3'

      - name: Deploy to Cloudflare Pages (Preview)
        if: github.event_name == 'pull_request'
        uses: cloudflare/pages-action@v1
        id: cloudflare-deploy-preview
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ secrets.CF_PAGES_PROJECT }}
          directory: _site
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          wranglerVersion: '3'

      - name: Add deployment comment to PR
        if: github.event_name == 'pull_request' && steps.cloudflare-deploy-preview.outputs.url
        uses: actions/github-script@v7
        with:
          script: |
            const url = '${{ steps.cloudflare-deploy-preview.outputs.url }}';
            const environment = '${{ steps.cloudflare-deploy-preview.outputs.environment }}';
            const alias = '${{ steps.cloudflare-deploy-preview.outputs.alias }}';
            
            const comment = `### üöÄ Cloudflare Pages Deployment
            
            **Preview URL:** ${url}
            **Environment:** ${environment}
            ${alias ? `**Alias:** ${alias}` : ''}
            
            ‚úÖ Deployment successful!`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Summary
        if: always()
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "### Production Deployment" >> $GITHUB_STEP_SUMMARY
            if [ -n "${{ steps.cloudflare-deploy-prod.outputs.url }}" ]; then
              echo "‚úÖ **Status:** Success" >> $GITHUB_STEP_SUMMARY
              echo "üîó **URL:** ${{ steps.cloudflare-deploy-prod.outputs.url }}" >> $GITHUB_STEP_SUMMARY
            else
              echo "‚ùå **Status:** Failed or skipped" >> $GITHUB_STEP_SUMMARY
            fi
          elif [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "### Preview Deployment" >> $GITHUB_STEP_SUMMARY
            if [ -n "${{ steps.cloudflare-deploy-preview.outputs.url }}" ]; then
              echo "‚úÖ **Status:** Success" >> $GITHUB_STEP_SUMMARY
              echo "üîó **Preview URL:** ${{ steps.cloudflare-deploy-preview.outputs.url }}" >> $GITHUB_STEP_SUMMARY
            else
              echo "‚ùå **Status:** Failed or skipped" >> $GITHUB_STEP_SUMMARY
            fi
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Triggered by:** ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY

  validate-links:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    continue-on-error: true
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      
      - name: Validate deployment
        run: |
          echo "üîç Validating deployment..."
          
          # Wait a bit for deployment to propagate
          sleep 30
          
          # Check if main site is accessible
          SITE_URL="${{ secrets.CF_PAGES_URL || 'https://tobin.page' }}"
          
          echo "Checking $SITE_URL..."
          if curl -f -s -o /dev/null -w "%{http_code}" "$SITE_URL" | grep -q "200"; then
            echo "‚úÖ Main site is accessible"
          else
            echo "‚ö†Ô∏è Warning: Main site returned non-200 status"
          fi
          
          # Check blog
          if curl -f -s -o /dev/null -w "%{http_code}" "$SITE_URL/blog" | grep -q -E "200|301|302"; then
            echo "‚úÖ Blog is accessible"
          else
            echo "‚ö†Ô∏è Warning: Blog returned unexpected status"
          fi